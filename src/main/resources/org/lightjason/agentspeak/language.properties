agent.ibaseagent.literalvariable=event literal [{0}] does not contains any variables
beliefbase.ibeliefbaseondemand.nostorage=beliefbase [{0}] does not use a storage with the name [{1}]
beliefbase.view.cview.empty=name need not to be empty
beliefbase.view.cview.equal=storages [{0}] are equal to [{1}]
common.ccommon.actioninstantiate=instantiation error on action [{0}]: {1}
common.ccommon.actionletter=actions name [{0}] must begin with a letter
common.ccommon.actionlowercase=action name [{0}] must begin with a lower-case letter
common.ccommon.actionnameempty=action name is empty
common.ccommon.classinstantiateerror=class [{0}] cannot instantiate: {1}
common.cpath.pathempty=path is empty
common.cpath.separatornotempty=separator must not be empty
generator.iactiongenerator.notfound=action [{0}] could not be found
generator.cactiongenerator.notfound=action [{0}] could not be found
generator.cactionstaticgenerator.notfound=action [{0}] could not be found
grammar.builder.cagentspeak.unknownachievmentgoal=unknown achievment-goal
grammar.builder.cagentspeak.unknownaction=unknown action [{0}]
grammar.builder.cagentspeak.unknownannotation=unknown annotation
grammar.builder.cagentspeak.unknownassignment=unknown single assignment
grammar.builder.cagentspeak.unknownbody=unknown execution body
grammar.builder.cagentspeak.unknowndeconstruct=unknown deconstruct operator
grammar.builder.cagentspeak.unknownexpression=unknown expression
grammar.builder.cagentspeak.unknownlambdaelement=unknown lambda expression element
grammar.builder.cagentspeak.unknownruleexecution=unknown rule action
grammar.builder.cagentspeak.unknownunary=unknown unary operator
grammar.builder.cagentspeak.unknownunificationconstraint=unknown unification constraint
grammar.builder.cagentspeak.wrongargumentnumber=wrong number [{0}] of action [{1}] arguments
grammar.builder.cterm.unknownterm=unknwon term
grammar.cerrorlistener.syntax=syntax error in line [{0}] at position [{1}]
language.ccommon.variablenotfoundincontext=variable [{0}] cannot be found within the execution context
language.crawterm.notallocated=raw term is not allocated
language.crawtermlist.notallocated=raw list is not allocated
language.crawtermlist.notassignable==raw list is not assignable to {0}
language.execution.assignment.eassignoperator.unknown=unknown assignment operator [{0}]
language.execution.base.cbelief.eaction.unknownoperator=unknown belief operator [{0}]
language.execution.expression.ebinaryoperator.unknownoperator=unknown binary operator [{0}]
language.execution.expression.eunaryoperator.unknownoperator=unknown unary operator [{0}]
language.execution.instantiable.plan.trigger.itrigger.etype.unknowntrigger=trigger definition [{0}] unknown
language.execution.unify.cdefaultunify.duplicatedvariable=duplicated variables not allowed in unification
language.execution.unify.cdefaultunify.novariable=unification without variables is not possible
language.fuzzy.cfuzzyvalue.fuzzyvalue=fuzzy value [{0}] must be in [0,1]
language.fuzzy.cfuzzyvaluemutable.fuzzyvalue=fuzzy value [{0}] must be in [0,1]
language.newfuzzy.cfuzzyvalue.fuzzyvalue=fuzzy value [{0}] must be in [0,1]
language.variable.cconstant.set=constant [{0}] cannot be set
language.variable.ibasevariable.notallocated=variable [{0}] is not allocated
action.builtin.collection.list.czip.argumentsnoteven=number of arguments must be even
action.builtin.collection.imapapplymultiple.argumentsnotodd=number of arguments must be odd
action.builtin.collection.list.csublist.argumentsnotoddandlessthan=arguments must be an odd number and at least [{0}] arguments must be present
action.builtin.string.clevenshtein.argumentnumberwrong=Number of arguments is incorrect, at least [{0}] arguments must be present
action.builtin.math.bit.matrix.cboolvalue.argumentsnotodd=number of arguments must be odd
action.builtin.math.bit.matrix.cnumericvalue.argumentsnotodd=number of arguments must be odd
action.builtin.collection.multimap.ccreate.argumentsnoteven=number of arguments must be even
action.builtin.math.bit.vector.crange.argumentsnotodd=number of arguments must be odd
action.builtin.math.chypot.argumentsnoteven=number of arguments must be even
action.builtin.collection.map.ccreate.argumentsnoteven=number of arguments must be even