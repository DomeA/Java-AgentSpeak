<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>LightJason - AgentSpeak(L++): TestCActionWebRest.java Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.js", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../layout.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">LightJason - AgentSpeak(L++)
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('d0/dae/TestCActionWebRest_8java_source.htm','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">TestCActionWebRest.java</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../d0/dae/TestCActionWebRest_8java.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * @cond LICENSE</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * ######################################################################################</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * # LGPL License                                                                       #</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * # This file is part of the LightJason AgentSpeak(L++)                                #</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * # Copyright (c) 2015-19, LightJason (info@lightjason.org)                            #</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * # This program is free software: you can redistribute it and/or modify               #</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * # it under the terms of the GNU Lesser General Public License as                     #</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * # published by the Free Software Foundation, either version 3 of the                 #</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * # License, or (at your option) any later version.                                    #</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * # This program is distributed in the hope that it will be useful,                    #</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * # but WITHOUT ANY WARRANTY; without even the implied warranty of                     #</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                      #</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * # GNU Lesser General Public License for more details.                                #</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * # You should have received a copy of the GNU Lesser General Public License           #</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * # along with this program. If not, see http://www.gnu.org/licenses/                  #</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * ######################################################################################</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * @endcond</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">package </span>org.lightjason.agentspeak.action.builtin;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Assert;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Test;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm">IBaseTest</a>;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d7/d8f/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web.htm">web</a>.<a class="code" href="../../d9/d69/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest.htm">rest</a>.<a class="code" href="../../da/dee/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CJsonList.htm">CJsonList</a>;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d7/d8f/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web.htm">web</a>.<a class="code" href="../../d9/d69/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest.htm">rest</a>.<a class="code" href="../../d5/d5e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CJsonObject.htm">CJsonObject</a>;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">action</a>.<a class="code" href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">builtin</a>.<a class="code" href="../../d7/d8f/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web.htm">web</a>.<a class="code" href="../../d9/d69/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest.htm">rest</a>.<a class="code" href="../../da/d18/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CXMLObject.htm">CXMLObject</a>;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">language</a>.<a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm">CRawTerm</a>;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">language</a>.<a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a>;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">language</a>.<a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">ITerm</a>;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">agentspeak</a>.<a class="code" href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">language</a>.<a class="code" href="../../d2/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution.htm">execution</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">import</span> java.util.ArrayList;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">import</span> java.util.Collections;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">import</span> java.util.List;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">import</span> java.util.stream.Collectors;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">import</span> java.util.stream.Stream;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm">   47</a></span>&#160;<span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class </span><a class="code" href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm">TestCActionWebRest</a> <span class="keyword">extends</span> <a class="code" href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm">IBaseTest</a></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    @Test</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#a7ce896d627aab41263c52baaa3b7fb97">   54</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#a7ce896d627aab41263c52baaa3b7fb97">jsonlisterror</a>()</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        Assert.assertFalse(</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            <span class="keyword">new</span> <a class="code" href="../../da/dee/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CJsonList.htm">CJsonList</a>().execute(</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                Stream.of( <span class="stringliteral">&quot;jsonlist&quot;</span>, <span class="stringliteral">&quot;testjsonlist&quot;</span> )</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                      .map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> )</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                      .collect( Collectors.toList() ),</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                Collections.emptyList()</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            ).value()</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        );</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    }</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    @Test</div><div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#a7ecd27a50355f56db2506e0f0418a38a">   71</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#a7ecd27a50355f56db2506e0f0418a38a">jsonlistsingle</a>()</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../da/dee/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CJsonList.htm">CJsonList</a>().<a class="code" href="../../da/dee/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CJsonList.htm#a52ac0d891710675dc503c5ce96abb51b">execute</a>(</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            Stream.of( <span class="stringliteral">&quot;https://api.github.com/repos/LightJason/Examples/commits&quot;</span>, <span class="stringliteral">&quot;testjsonlist&quot;</span> )</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                  .map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> )</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                  .collect( Collectors.toList() ),</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            l_return</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        );</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        Assert.assertFalse( l_return.isEmpty() );</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        Assert.assertTrue( l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">ITerm::raw</a> ).allMatch( i -&gt; i instanceof <a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a> ) );</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        Assert.assertTrue( l_return.stream().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">ITerm</a>::&lt;ILiteral&gt;raw ).map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a79a6c36b9a6d9fc8cd8a9679300e27d1">ITerm::functor</a> ).allMatch( i -&gt; i.equals( <span class="stringliteral">&quot;testjsonlist&quot;</span> ) ) );</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    }</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    @Test</div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#af2cf07a51917304608fb468710d541c2">   93</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#af2cf07a51917304608fb468710d541c2">jsonlistmultiple</a>()</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    {</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../da/dee/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CJsonList.htm">CJsonList</a>().<a class="code" href="../../da/dee/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CJsonList.htm#a52ac0d891710675dc503c5ce96abb51b">execute</a>(</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            Stream.of( <span class="stringliteral">&quot;https://api.github.com/repos/LightJason/Examples/commits&quot;</span>, <span class="stringliteral">&quot;testjsonlist&quot;</span>, <span class="stringliteral">&quot;item&quot;</span> )</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                  .map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> )</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                  .collect( Collectors.toList() ),</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            l_return</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        );</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        Assert.assertEquals( l_return.size(), 1 );</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        Assert.assertTrue( l_return.get( 0 ).raw() instanceof <a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a> );</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        Assert.assertEquals( l_return.get( 0 ).&lt;<a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a>&gt;raw().<a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a79a6c36b9a6d9fc8cd8a9679300e27d1">functor</a>(), <span class="stringliteral">&quot;testjsonlist&quot;</span> );</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        Assert.assertFalse( l_return.get( 0 ).&lt;<a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a>&gt;raw().<a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm#a7f59198401ff8cebe3e17971e3f0f36e">values</a>().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a79a6c36b9a6d9fc8cd8a9679300e27d1">ITerm::functor</a> ).noneMatch( i -&gt; i.equals( <span class="stringliteral">&quot;item&quot;</span> ) ) );</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    }</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    @Test</div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#a072fc4fa6d9b9cc214fabef781a2bd27">  116</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#a072fc4fa6d9b9cc214fabef781a2bd27">jsonobjecterror</a>()</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    {</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        Assert.assertFalse(</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <span class="keyword">new</span> <a class="code" href="../../d5/d5e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CJsonObject.htm">CJsonObject</a>().execute(</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                Stream.of( <span class="stringliteral">&quot;jsonobject&quot;</span>, <span class="stringliteral">&quot;testjsonobject&quot;</span> )</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                      .map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> )</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                      .collect( Collectors.toList() ),</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                Collections.emptyList()</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            ).value()</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        );</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    }</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    @Test</div><div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#ad31d2bfb18e5a93203c3353a343fdadc">  134</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#ad31d2bfb18e5a93203c3353a343fdadc">jsonobjectsingle</a>()</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    {</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d5/d5e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CJsonObject.htm">CJsonObject</a>().<a class="code" href="../../d5/d5e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CJsonObject.htm#a8f1b7cc440ac356ef6b6654b4faad35d">execute</a>(</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            Stream.of( <span class="stringliteral">&quot;https://maps.googleapis.com/maps/api/geocode/json?address=Frankfurt&quot;</span>, <span class="stringliteral">&quot;testjsonobject&quot;</span> )</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                  .map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> )</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                  .collect( Collectors.toList() ),</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            l_return</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        );</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        Assert.assertEquals( l_return.size(), 1 );</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        Assert.assertTrue( l_return.get( 0 ).raw() instanceof <a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a> );</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        Assert.assertEquals( l_return.get( 0 ).&lt;<a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a>&gt;raw().<a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a79a6c36b9a6d9fc8cd8a9679300e27d1">functor</a>(), <span class="stringliteral">&quot;testjsonobject&quot;</span> );</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    }</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    @Test</div><div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#a7f5d8feb7bab1f2cc79ad03191e3b94f">  156</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#a7f5d8feb7bab1f2cc79ad03191e3b94f">jsonobjectmultiple</a>()</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    {</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../d5/d5e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CJsonObject.htm">CJsonObject</a>().<a class="code" href="../../d5/d5e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CJsonObject.htm#a8f1b7cc440ac356ef6b6654b4faad35d">execute</a>(</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            Stream.of( <span class="stringliteral">&quot;https://maps.googleapis.com/maps/api/geocode/json?address=Frankfurt&quot;</span>, <span class="stringliteral">&quot;testjsonobject&quot;</span>, <span class="stringliteral">&quot;loc&quot;</span> )</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                  .map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> )</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                  .collect( Collectors.toList() ),</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            l_return</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        );</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        Assert.assertEquals( l_return.size(), 1 );</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        Assert.assertTrue( l_return.get( 0 ).raw() instanceof <a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a> );</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        Assert.assertEquals( l_return.get( 0 ).&lt;<a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a>&gt;raw().<a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a79a6c36b9a6d9fc8cd8a9679300e27d1">functor</a>(), <span class="stringliteral">&quot;testjsonobject&quot;</span> );</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        Assert.assertTrue( l_return.get( 0 ).&lt;<a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a>&gt;raw().<a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm#a7f59198401ff8cebe3e17971e3f0f36e">values</a>().findFirst().isPresent() );</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        Assert.assertEquals(</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            l_return.get( 0 ).&lt;<a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a>&gt;raw().<a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm#a7f59198401ff8cebe3e17971e3f0f36e">values</a>().findFirst().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a79a6c36b9a6d9fc8cd8a9679300e27d1">ITerm::functor</a> ).orElseThrow( IllegalArgumentException::new ),</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            <span class="stringliteral">&quot;loc&quot;</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        );</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    }</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    @Test</div><div class="line"><a name="l00183"></a><span class="lineno"><a class="line" href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#a7cfb938a893bb852ee123f23d19fdcb6">  183</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#a7cfb938a893bb852ee123f23d19fdcb6">xmlobjecterror</a>()</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    {</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        Assert.assertFalse(</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            <span class="keyword">new</span> <a class="code" href="../../da/d18/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CXMLObject.htm">CXMLObject</a>().execute(</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                Stream.of( <span class="stringliteral">&quot;xmlobject&quot;</span>, <span class="stringliteral">&quot;testxml&quot;</span> )</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                      .map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> )</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                      .collect( Collectors.toList() ),</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                Collections.emptyList()</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            ).value()</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        );</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    }</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    @Test</div><div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#a59e3d4ff208ae5cb1d8c35e57940072b">  201</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#a59e3d4ff208ae5cb1d8c35e57940072b">xmlobjectsingle</a>()</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    {</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../da/d18/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CXMLObject.htm">CXMLObject</a>().<a class="code" href="../../da/d18/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CXMLObject.htm#aff2f1645fcea1211b3cd54a99693a27d">execute</a>(</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            Stream.of( <span class="stringliteral">&quot;https://en.wikipedia.org/wiki/Special:Export/Normalized_compression_distance&quot;</span>, <span class="stringliteral">&quot;testxml&quot;</span> )</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                  .map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> )</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                  .collect( Collectors.toList() ),</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            l_return</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        );</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        Assert.assertEquals( l_return.size(), 1 );</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        Assert.assertTrue( l_return.get( 0 ).raw() instanceof <a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a> );</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        Assert.assertEquals( l_return.get( 0 ).&lt;<a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a>&gt;raw().<a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a79a6c36b9a6d9fc8cd8a9679300e27d1">functor</a>(), <span class="stringliteral">&quot;testxml&quot;</span> );</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    }</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    @Test</div><div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#a5e4a0835dd758bad5026098f9e74c0ff">  223</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#a5e4a0835dd758bad5026098f9e74c0ff">xmlobjectmultiple</a>()</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    {</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keyword">final</span> List&lt;ITerm&gt; l_return = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keyword">new</span> <a class="code" href="../../da/d18/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CXMLObject.htm">CXMLObject</a>().<a class="code" href="../../da/d18/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CXMLObject.htm#aff2f1645fcea1211b3cd54a99693a27d">execute</a>(</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            <span class="keyword">false</span>, <a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">IContext</a>.<a class="code" href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">EMPTYPLAN</a>,</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            Stream.of( <span class="stringliteral">&quot;https://en.wikipedia.org/wiki/Special:Export/Normalized_compression_distance&quot;</span>, <span class="stringliteral">&quot;testxml&quot;</span>, <span class="stringliteral">&quot;ncd&quot;</span> )</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                  .map( <a class="code" href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">CRawTerm::from</a> )</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                  .collect( Collectors.toList() ),</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            l_return</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        );</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        Assert.assertEquals( l_return.size(), 1 );</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        Assert.assertTrue( l_return.get( 0 ).raw() instanceof <a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a> );</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        Assert.assertEquals( l_return.get( 0 ).&lt;<a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a>&gt;raw().<a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a79a6c36b9a6d9fc8cd8a9679300e27d1">functor</a>(), <span class="stringliteral">&quot;testxml&quot;</span> );</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        Assert.assertTrue( l_return.get( 0 ).&lt;<a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a>&gt;raw().<a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm#a7f59198401ff8cebe3e17971e3f0f36e">values</a>().findFirst().isPresent() );</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        Assert.assertEquals(</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            l_return.get( 0 ).&lt;<a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">ILiteral</a>&gt;raw().<a class="code" href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm#a7f59198401ff8cebe3e17971e3f0f36e">values</a>().findFirst().map( <a class="code" href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a79a6c36b9a6d9fc8cd8a9679300e27d1">ITerm::functor</a> ).orElseThrow( IllegalArgumentException::new ),</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            <span class="stringliteral">&quot;ncd&quot;</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        );</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    }</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;}</div><div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest_htm_ad31d2bfb18e5a93203c3353a343fdadc"><div class="ttname"><a href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#ad31d2bfb18e5a93203c3353a343fdadc">org.lightjason.agentspeak.action.builtin.TestCActionWebRest.jsonobjectsingle</a></div><div class="ttdeci">final void jsonobjectsingle()</div><div class="ttdoc">test json object with single argument </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/dae/TestCActionWebRest_8java_source.htm#l00134">TestCActionWebRest.java:134</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest_htm_af2cf07a51917304608fb468710d541c2"><div class="ttname"><a href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#af2cf07a51917304608fb468710d541c2">org.lightjason.agentspeak.action.builtin.TestCActionWebRest.jsonlistmultiple</a></div><div class="ttdeci">final void jsonlistmultiple()</div><div class="ttdoc">test json list with multiple argument </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/dae/TestCActionWebRest_8java_source.htm#l00093">TestCActionWebRest.java:93</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_htm"><div class="ttname"><a href="../../d6/d55/namespaceorg_1_1lightjason_1_1agentspeak.htm">org.lightjason.agentspeak</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest_htm"><div class="ttname"><a href="../../db/da9/classorg_1_1lightjason_1_1agentspeak_1_1IBaseTest.htm">org.lightjason.agentspeak.IBaseTest</a></div><div class="ttdoc">base test class with helpers </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00033">IBaseTest.java:33</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest_htm_a072fc4fa6d9b9cc214fabef781a2bd27"><div class="ttname"><a href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#a072fc4fa6d9b9cc214fabef781a2bd27">org.lightjason.agentspeak.action.builtin.TestCActionWebRest.jsonobjecterror</a></div><div class="ttdeci">final void jsonobjecterror()</div><div class="ttdoc">test json object error </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/dae/TestCActionWebRest_8java_source.htm#l00116">TestCActionWebRest.java:116</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CJsonList_htm"><div class="ttname"><a href="../../da/dee/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CJsonList.htm">org.lightjason.agentspeak.action.builtin.web.rest.CJsonList</a></div><div class="ttdoc">action for calling a restful webservice with a JSON object list. </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d31/CJsonList_8java_source.htm#l00049">CJsonList.java:49</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext_htm_a2fbdd035b68cfb71c6ee6bd92c799cdf"><div class="ttname"><a href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm#a2fbdd035b68cfb71c6ee6bd92c799cdf">org.lightjason.agentspeak.language.execution.IContext.EMPTYPLAN</a></div><div class="ttdeci">IContext EMPTYPLAN</div><div class="ttdoc">empty context with plan </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d60/IContext_8java_source.htm#l00047">IContext.java:47</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral_htm"><div class="ttname"><a href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm">org.lightjason.agentspeak.language.ILiteral</a></div><div class="ttdoc">literal interface </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/de4/ILiteral_8java_source.htm#l00039">ILiteral.java:39</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest_htm_a7ecd27a50355f56db2506e0f0418a38a"><div class="ttname"><a href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#a7ecd27a50355f56db2506e0f0418a38a">org.lightjason.agentspeak.action.builtin.TestCActionWebRest.jsonlistsingle</a></div><div class="ttdeci">final void jsonlistsingle()</div><div class="ttdoc">test json list with single argument </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/dae/TestCActionWebRest_8java_source.htm#l00071">TestCActionWebRest.java:71</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CJsonList_htm_a52ac0d891710675dc503c5ce96abb51b"><div class="ttname"><a href="../../da/dee/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CJsonList.htm#a52ac0d891710675dc503c5ce96abb51b">org.lightjason.agentspeak.action.builtin.web.rest.CJsonList.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d31/CJsonList_8java_source.htm#l00067">CJsonList.java:67</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest_htm"><div class="ttname"><a href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm">org.lightjason.agentspeak.action.builtin.TestCActionWebRest</a></div><div class="ttdoc">REST-API test. </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/dae/TestCActionWebRest_8java_source.htm#l00047">TestCActionWebRest.java:47</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest_htm_a7cfb938a893bb852ee123f23d19fdcb6"><div class="ttname"><a href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#a7cfb938a893bb852ee123f23d19fdcb6">org.lightjason.agentspeak.action.builtin.TestCActionWebRest.xmlobjecterror</a></div><div class="ttdeci">final void xmlobjecterror()</div><div class="ttdoc">test xml object error </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/dae/TestCActionWebRest_8java_source.htm#l00183">TestCActionWebRest.java:183</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_htm"><div class="ttname"><a href="../../d7/d4b/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin.htm">org.lightjason.agentspeak.action.builtin</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral_htm_a7f59198401ff8cebe3e17971e3f0f36e"><div class="ttname"><a href="../../dc/da7/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ILiteral.htm#a7f59198401ff8cebe3e17971e3f0f36e">org.lightjason.agentspeak.language.ILiteral.values</a></div><div class="ttdeci">Stream&lt; ITerm &gt; values(final IPath... p_path)</div><div class="ttdoc">returns a stream over value items </div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CXMLObject_htm_aff2f1645fcea1211b3cd54a99693a27d"><div class="ttname"><a href="../../da/d18/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CXMLObject.htm#aff2f1645fcea1211b3cd54a99693a27d">org.lightjason.agentspeak.action.builtin.web.rest.CXMLObject.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../df/dce/CXMLObject_8java_source.htm#l00065">CXMLObject.java:65</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CXMLObject_htm"><div class="ttname"><a href="../../da/d18/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CXMLObject.htm">org.lightjason.agentspeak.action.builtin.web.rest.CXMLObject</a></div><div class="ttdoc">action to call a restful webservice with XML data. </div><div class="ttdef"><b>Definition:</b> <a href="../../df/dce/CXMLObject_8java_source.htm#l00048">CXMLObject.java:48</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_htm"><div class="ttname"><a href="../../d2/db1/namespaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution.htm">org.lightjason.agentspeak.language.execution</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_htm"><div class="ttname"><a href="../../d7/d8f/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web.htm">org.lightjason.agentspeak.action.builtin.web</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_htm"><div class="ttname"><a href="../../d1/de7/namespaceorg_1_1lightjason.htm">org.lightjason</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1language_htm"><div class="ttname"><a href="../../d2/d14/namespaceorg_1_1lightjason_1_1agentspeak_1_1language.htm">org.lightjason.agentspeak.language</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d8/df9/language_2CCommon_8java_source.htm#l00024">language/CCommon.java:24</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext_htm"><div class="ttname"><a href="../../d8/dac/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1execution_1_1IContext.htm">org.lightjason.agentspeak.language.execution.IContext</a></div><div class="ttdoc">execution context with local data </div><div class="ttdef"><b>Definition:</b> <a href="../../d1/d60/IContext_8java_source.htm#l00042">IContext.java:42</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest_htm_a59e3d4ff208ae5cb1d8c35e57940072b"><div class="ttname"><a href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#a59e3d4ff208ae5cb1d8c35e57940072b">org.lightjason.agentspeak.action.builtin.TestCActionWebRest.xmlobjectsingle</a></div><div class="ttdeci">final void xmlobjectsingle()</div><div class="ttdoc">test xml object with single argument </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/dae/TestCActionWebRest_8java_source.htm#l00201">TestCActionWebRest.java:201</a></div></div>
<div class="ttc" id="namespaceorg_htm"><div class="ttname"><a href="../../db/d96/namespaceorg.htm">org</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm_htm_a79a6c36b9a6d9fc8cd8a9679300e27d1"><div class="ttname"><a href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a79a6c36b9a6d9fc8cd8a9679300e27d1">org.lightjason.agentspeak.language.ITerm.functor</a></div><div class="ttdeci">String functor()</div><div class="ttdoc">returns the functor without path </div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1action_htm"><div class="ttname"><a href="../../d8/da9/namespaceorg_1_1lightjason_1_1agentspeak_1_1action.htm">org.lightjason.agentspeak.action</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm_htm_a037c4a7c6111fafc70081ed36d929833"><div class="ttname"><a href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm#a037c4a7c6111fafc70081ed36d929833">org.lightjason.agentspeak.language.ITerm.raw</a></div><div class="ttdeci">&lt; T &gt; T raw()</div><div class="ttdoc">cast to any raw value type </div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_htm"><div class="ttname"><a href="../../d9/d69/namespaceorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest.htm">org.lightjason.agentspeak.action.builtin.web.rest</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d31/CJsonList_8java_source.htm#l00024">CJsonList.java:24</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest_htm_a7ce896d627aab41263c52baaa3b7fb97"><div class="ttname"><a href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#a7ce896d627aab41263c52baaa3b7fb97">org.lightjason.agentspeak.action.builtin.TestCActionWebRest.jsonlisterror</a></div><div class="ttdeci">final void jsonlisterror()</div><div class="ttdoc">test json list error </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/dae/TestCActionWebRest_8java_source.htm#l00054">TestCActionWebRest.java:54</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm_htm_a95c5d82dfc6d8ba46b478b1e5d34f1e5"><div class="ttname"><a href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm#a95c5d82dfc6d8ba46b478b1e5d34f1e5">org.lightjason.agentspeak.language.CRawTerm.from</a></div><div class="ttdeci">static&lt; N &gt; CRawTerm&lt; N &gt; from(final N p_value)</div><div class="ttdoc">factory for a raw term </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d03/CRawTerm_8java_source.htm#l00104">CRawTerm.java:104</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest_htm_a5e4a0835dd758bad5026098f9e74c0ff"><div class="ttname"><a href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#a5e4a0835dd758bad5026098f9e74c0ff">org.lightjason.agentspeak.action.builtin.TestCActionWebRest.xmlobjectmultiple</a></div><div class="ttdeci">final void xmlobjectmultiple()</div><div class="ttdoc">test xml object with single argument </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/dae/TestCActionWebRest_8java_source.htm#l00223">TestCActionWebRest.java:223</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest_htm_a7f5d8feb7bab1f2cc79ad03191e3b94f"><div class="ttname"><a href="../../db/df0/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1TestCActionWebRest.htm#a7f5d8feb7bab1f2cc79ad03191e3b94f">org.lightjason.agentspeak.action.builtin.TestCActionWebRest.jsonobjectmultiple</a></div><div class="ttdeci">final void jsonobjectmultiple()</div><div class="ttdoc">test json object with multiple arguments </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/dae/TestCActionWebRest_8java_source.htm#l00156">TestCActionWebRest.java:156</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CJsonObject_htm_a8f1b7cc440ac356ef6b6654b4faad35d"><div class="ttname"><a href="../../d5/d5e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CJsonObject.htm#a8f1b7cc440ac356ef6b6654b4faad35d">org.lightjason.agentspeak.action.builtin.web.rest.CJsonObject.execute</a></div><div class="ttdeci">final IFuzzyValue&lt; Boolean &gt; execute(final boolean p_parallel, @Nonnull final IContext p_context, @Nonnull final List&lt; ITerm &gt; p_argument, @Nonnull final List&lt; ITerm &gt; p_return)</div><div class="ttdoc">defines a plan-body operation </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d69/CJsonObject_8java_source.htm#l00066">CJsonObject.java:66</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm_htm"><div class="ttname"><a href="../../d9/d34/interfaceorg_1_1lightjason_1_1agentspeak_1_1language_1_1ITerm.htm">org.lightjason.agentspeak.language.ITerm</a></div><div class="ttdoc">term interface </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/da8/ITerm_8java_source.htm#l00036">ITerm.java:36</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm_htm"><div class="ttname"><a href="../../dd/d62/classorg_1_1lightjason_1_1agentspeak_1_1language_1_1CRawTerm.htm">org.lightjason.agentspeak.language.CRawTerm</a></div><div class="ttdoc">term structure for simple datatypes </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d03/CRawTerm_8java_source.htm#l00045">CRawTerm.java:45</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CJsonObject_htm"><div class="ttname"><a href="../../d5/d5e/classorg_1_1lightjason_1_1agentspeak_1_1action_1_1builtin_1_1web_1_1rest_1_1CJsonObject.htm">org.lightjason.agentspeak.action.builtin.web.rest.CJsonObject</a></div><div class="ttdoc">action for calling a restful webservice with a JSON object. </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/d69/CJsonObject_8java_source.htm#l00048">CJsonObject.java:48</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_68267d1309a1af8e8297ef4c3efbcdba.htm">src</a></li><li class="navelem"><a class="el" href="../../dir_120ed4da3e3217b1e7fc0b4f48568e79.htm">test</a></li><li class="navelem"><a class="el" href="../../dir_97debbc39e3b917fca663601bb2b0709.htm">java</a></li><li class="navelem"><a class="el" href="../../dir_96589a7c16c3e343f1421d4211dea239.htm">org</a></li><li class="navelem"><a class="el" href="../../dir_4a277734df853a199aee4e8ea5127bc7.htm">lightjason</a></li><li class="navelem"><a class="el" href="../../dir_1360ece8acf819a4645fb6821869c6ac.htm">agentspeak</a></li><li class="navelem"><a class="el" href="../../dir_5c7d9bd26293bcba3b50ce1327e8211c.htm">action</a></li><li class="navelem"><a class="el" href="../../dir_f40dbd565273397ba32344fb1fccd977.htm">builtin</a></li><li class="navelem"><a class="el" href="../../d0/dae/TestCActionWebRest_8java.htm">TestCActionWebRest.java</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
